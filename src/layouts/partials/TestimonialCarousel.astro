---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const variant = Astro.props.variant;
const { testimonials, arrowIcon } = (
  (await getEntry(
    "testimonialSection",
    "testimonial"
  )) as CollectionEntry<"testimonialSection">
).data;
---

<section class="section">
  <div class="container">
    <div
      class:list={[
        "rounded-3xl py-12 px-5 lg:px-32 lg:py-28",
        { "bg-tertiary": variant === "tertiary" },
        { "bg-secondary": variant === "secondary" },
      ]}
      data-aos="fade-up-sm"
      data-aos-delay="100"
    >
      <div class="isTestimonialSwiper relative overflow-hidden">
        <div class="swiper-wrapper">
          {
            testimonials &&
              testimonials.length > 0 &&
              testimonials.map((testimonial) => (
                <div class="swiper-slide">
                  <div class="flex flex-col items-center text-center  md:col-8  mx-auto">
                    <img
                      src={testimonial.companyLogo}
                      alt="Company Logo"
                      class="mb-4 w-1/3 md:w-auto"
                    />
                    <p
                      class:list={[
                        "text-h5 md:text-h4 leading-relaxed font-secondary font-medium",
                        { "text-dark": variant === "tertiary" },
                        { "text-dark": variant === "secondary" },
                      ]}
                      set:html={markdownify(testimonial.content)}
                    />
                    <div class="flex items-center gap-4 mt-8 text-left">
                      <ImageMod
                        width={56}
                        height={56}
                        src={testimonial.avatar}
                        alt={testimonial.name}
                      />
                      <div class="flex flex-col">
                        <p class="text-lg font-medium text-dark">
                          {testimonial.name}
                        </p>
                        <span class="text-sm  text-dark/50">
                          {testimonial.designation}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              ))
          }
        </div>
        <button
          class="swiper-button-next hidden md:block cursor-pointer z-10 absolute inset-y-0 right-0"
          aria-label="slider previous"
        >
          <div
            class="p-2 bg-dark hover:bg-dark/80 transition-colors duration-300 text-white w-12 aspect-square rounded-full grid place-items-center"
          >
            <Icon name={arrowIcon} class="inline-block text-[1.5rem]" />
          </div>
        </button>
        <button
          class="swiper-button-prev hidden md:block cursor-pointer z-10 absolute inset-y-0 left-0"
          aria-label="slider next"
        >
          <div
            class="p-2 bg-dark hover:bg-dark/80 transition-colors duration-300 text-white w-12 aspect-square rounded-full grid place-items-center"
          >
            <Icon
              name={arrowIcon}
              class="inline-block text-[1.5rem] rotate-180"
            />
          </div>
        </button>
      </div>
    </div>
  </div>
</section>

<script>
  import { Swiper } from "swiper";
  import "swiper/css";
  import "swiper/css/pagination";
  import { Autoplay, Navigation } from "swiper/modules";

  function initSwiper() {
    const slider = document.querySelector(".isTestimonialSwiper");
    new Swiper(slider as HTMLElement, {
      modules: [Autoplay, Navigation],
      autoplay: {
        delay: 4000,
      },
      loop: true,
      breakpoints: {
        768: {
          slidesPerView: 1,
        },

        992: {
          slidesPerView: 1,
        },
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });
  }

  document.addEventListener("astro:page-load", initSwiper);
</script>
